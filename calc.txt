#include<reg51.h>
void lcd_init();  
void lcd_cmd(unsigned char);  
void delay_ms(unsigned int);  
void disp_num(int num);    
void lcd_char(unsigned char);     
int get_num(char c);                                
char scan_key(void);                 
sfr 1data = 0x0A;
sbit rs = P3^7;
sbit rw = P3^5; 
sbit en = P3^6;
sbit R1=P1^0;
sbit R2=P1^1;
sbit R3=P1^2;
sbit R4=P1^3;
sbit C1=P1^4;
sbit C2=P1^5;
sbit C3=P1^6;
sbit C4=P1^7;

void lcd_init()
{
lcd_cmd(0x30);
delay_ms(10);
lcd_cmd(0x30);
delay_ms(10);
lcd_cmd(0x30);
delay_ms(5);
lcd_cmd(0x38);
lcd_cmd(0x10);
lcd_cmd(0x01);
lcd_cmd(0x0c);
lcd_cmd(0x06);
lcd_cmd(0x0f);
}

int main(void)
{
   char key;                     
   int num1 = 0;                 
   char func = '+';              
   int num2 = 0;                 
   
   lcd_init();                    
   while(1)
   { 
     key = get_key();
     writecmd(0x01);  
          
	writedata(key);            
	 num1 = get_num(key);       
     
	 if(num1! = Error)           
	 {
		 key = get_key();
		 writedata(key);                  
		 func = get_func(key);            
		 
		 if(func!='e')                    
		 {
			 key = get_key();
			 writedata(key);              
			 num2 = get_num(key);

			 if(num2!=Error)              
			 {
				 key = get_key();
				 writedata(key);          
				 
				 if(key == '=')          
				 {
					 switch(func)         //switch on function
					 {
					 case 'x':
 						disp_num(num1*num2);
 						break;
					 case '/': 
						disp_num(num1/num2); 
						break;
					 case '+': 
						disp_num(num1+num2);
						break;
					 case '-': 
						disp_num(num1-num2); 
						break;
					 }
				 }
				 else				      
				 { 
					 if(key == 'C')       
					 {
					    writecmd(0x01);  
					 }
					 else
					 {
					 	DispError(0); 	  
					 }
				 }                                 
			 }
		 }
     }
   }
}

void lcd_cmd(unsigned char val)
{
1data = value;
rs=0;
rw=0;
en=1;
delay_ms(50);
en=0;
delay_ms(50);
}
void lcd_char(unsigned char ch)
{
1data = value;
rs=1;
rw=0;
en=1;
delay_ms(50);
en=0;
delay_ms(50);
}
void delay_ms (unsigned int i)
{
	unsigned int k,j;
	for(;i>0;i--)
	{
		for(j=122;j>0;j--);
		for(k=122;k>0;k--);
	}		
}



	

char scan_key()
{
	unsigned char c;
	c='s';
	while(!(c=='0' && c=='1' &&  c=='2' && c=='3' && c=='4' && c=='5' && c=='6' && c=='7' && c=='8'
	 && c=='9' && c=='+' && c=='-' && c=='#' && c=='$' && c=='*' && c=='/' ))
	{
	r0=0;r1=1;r2=1;r3=1;
	if(c0==0 && r0==0 ){lcddata('1');MSDelay(100000);return c='1';}
	    if(c1==0 && r0==0){ lcddata('2');MSDelay(100000);return c= '2';}
	if(c2==0 && r0==0){ lcddata('3');MSDelay(100000);return c= '3';}
	if(c3==0 && r0==0){ lcddata('4');MSDelay(100000);return c= '4';}
	  
	r0=1;r1=0;r2=1;r3=1;
	

	if(c0==0 && r1==0){ lcddata('5');MSDelay(100000);return c= '5';}
	    if(c1==0 && r1==0){ lcddata('6');MSDelay(100000);return c= '6';}
	if(c2==0 && r1==0){ lcddata('7');MSDelay(100000);return c= '7';}
	if(c3==0 && r1==0){ lcddata('8');MSDelay(100000);return c= '8';}
	

	r0=1;r1=1;r2=0;r3=1;
	

	if(c0==0 && r2==0){ lcddata('9');MSDelay(100000);return c= '9';}
	    if(c1==0 && r2==0){ lcddata('0');MSDelay(100000);return c= '0';}
	if(c2==0 && r2==0){ lcddata('+');MSDelay(100000);return c= '+';}
	if(c3==0 && r2==0){ lcddata('-');MSDelay(100000);return c= '-';}
	

	r0=1;r1=1;r2=1;r3=0;
	

	if(c0==0 && r3==0){ lcddata('*');MSDelay(100000);return c= '*';}
	    if(c1==0 && r3==0){ lcddata('/');MSDelay(100000);return c= '/';}
	if(c2==0 && r3==0){ lcddata('^');MSDelay(100000);return c= '^';}
	if(c3==0 && r3==0){ lcddata('#');MSDelay(100000);return c= '#';}
	}
	return 0;
	}
	

	int get_num(char c)        
	{
	switch(c)
	{
	case '0': return 0; break;
	case '1': return 1; break;
	case '2': return 2; break;
	case '3': return 3; break;
	case '4': return 4; break;
	case '5': return 5; break;
	case '6': return 6; break;
	case '7': return 7; break;
	case '8': return 8; break;
	case '9': return 9; break;
	}
	return 0;
	}
